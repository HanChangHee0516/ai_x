1절. 리스트 : lst [타입과 관련없는 0개 이상의데이터들]
	len(lst) : 요소 갯수
	min(lst), max(lst), sum(lst),sorten(lst, reverse+True) : 최소, 최대, 합, wjdfuf
	date in lst : lst안에 date 요소가 맀는지 여부
	lst(idx), lst[from:stop:step] 인덱싱과 슬라이싱
	추가 : lst,append(value), lst.insert(idx,value),lst.extend(anthoer_lst_
	삭제 : lst,pop(), lst.pop(), lst.remove(date)
	찾기 : lst.index(date), lst.count(date)
	정렬 : lst.sort(reverse=True)
	역순 : lst.erverse()
2절. 튜플 : tup = (date, ) 수정 불가
	len(tup) : 요소 갯수
	min(tup), max(tup), sum(tup),sorten(tup, reverse+True) : 최소, 최대, 합, wjdfuf
	date in lst : tup안에 date 요소가 맀는지 여부
	tup(idx), tup[from:stop:step] 인덱싱과 슬라이싱
	찾기 : tup.index(date), tup.count(date)
3절. 딕셔너리 dic = {ket1value1, key2:value, ...}
	읽기 : dic[key1],	dic.get(key1)
	수정 : dic{key1] = 수정할 데이터
	제거 : del dic[key1], dic.pop(key1)
	추가 : dic[key9] = value9
	dic.keys() / dic.values() / dic.items()
4절. 셋 s = {date1, date2, date1} => {date1, date2} 중복허용안함, 순서없음(인덱스없음)
	추가 : add(스칼라데이터), update(데이터구조)
	삭제 : remove(삭제할 데이터)
	연산 : & | -
데이터구조를 for문을 이용하여 출력할 경우 enumerate를 사용