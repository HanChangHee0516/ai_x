
[딥러닝을 활용한 자연어 처리 요약]

1. 자연어 처리(NLP) 개요
- 자연어는 인간이 일상적으로 사용하는 언어(한국어, 영어 등)
- NLP는 컴퓨터가 사람의 자연어를 이해·처리할 수 있게 하는 AI 분야
- 주요 하위분야: 형태소 분석, 품사 태깅, 구문 분석, 의미 분석, 감정 분석, 기계번역, 질의응답, 챗봇 등

2. 주요 도구 및 라이브러리
- NLTK: 파이썬 기반 자연어 처리 패키지, 말뭉치, 토큰화, 형태소 분석, 품사 태깅 등 지원 (영문)
- KoNLPy: 한국어 자연어 처리용 파이썬 패키지. 여러 한글 형태소 분석기(Komoran, Kkma, Hannanum, Mecab, Okt) 지원
- WordCloud, Gensim(Word2Vec), apyori(연관분석) 등

3. 텍스트 전처리/기초기법
- 토큰화(Tokenization): 문장·단어 단위로 텍스트 분할
- 형태소 분석: 단어를 의미 단위로 분리(어근/어미/접두사 등 추출)
- 불용어(Stopword) 처리: 분석에 불필요한 단어 제거
- 품사 태깅(POS Tagging): 단어별 품사 정보 부착
- 빈도 분석, n-gram 분석

4. 워드 임베딩(Word Embedding)
- 희소 표현(원-핫 인코딩) → 밀집 표현(Dense Vector)으로 변환
- Word2Vec: CBOW(문맥→중심단어), Skip-Gram(중심→문맥) 방식
- 단어 의미를 수치화·벡터화해 유사성/관계 분석 가능

5. 연관 분석(Association Analysis)
- 데이터에서 자주 발생하는 항목/패턴을 찾고, 연관규칙 도출
- 대표적 알고리즘: apriori (apyori 패키지로 구현)
- 핵심 지표: 지지도(Support), 신뢰도(Confidence), 향상도(Lift)
- 마트 장바구니, 뉴스, 텍스트 등 다양한 트랜잭션 데이터에 적용

6. 인공신경망(DNN, CNN, RNN)
- 기본 구조: 입력층, 은닉층(여러 개 가능), 출력층
- 활성화 함수: relu, softmax, sigmoid 등
- Keras/Tensorflow 사용 시 Sequential API로 간단하게 신경망 구성
- 주요 옵티마이저: SGD, Adam, RMSprop 등

7. 순환신경망(RNN) 및 LSTM
- RNN: 시퀀스(문장, 시계열 등) 데이터의 문맥을 처리
- 은닉 상태를 통해 과거 정보를 현재로 전달
- LSTM: 장기 의존성(long-term dependency) 문제를 해결한 RNN 확장

8. 자연어 처리 실습 예시
- 형태소 분석: KoNLPy 활용, 명사 추출/품사 태깅 등
- 워드 클라우드: 텍스트 데이터 시각화(빈도 기반 단어 크기)
- Word2Vec: 뉴스 기사 등에서 단어 임베딩 생성
- 연관분석: apriori로 뉴스 등에서 의미있는 규칙 발굴
- Keras/Tensorflow로 간단한 분류 모델(RNN/LSTM) 구성 및 훈련

[끝]
