
CSS3 핵심 요약 정리본

1. CSS 파일 분리

- CSS를 HTML 문서에서 분리하여 관리
- <link rel="stylesheet" href="파일명.css" /> 형태로 head 태그에 삽입
- 유지보수와 가독성에 유리함

예시:
<link rel="stylesheet" href="initialcode.css" />
<link rel="stylesheet" href="header.css" />

2. @import 규칙

- CSS 파일 내부에서 다른 CSS 파일을 불러올 때 사용
- <style> 태그 내부, 상단에 위치해야 함
- 단점: link 태그보다 로딩 속도가 느릴 수 있음

예시:
<style>
@import url('title.css');
</style>

3. @media 규칙

- 장치나 상황에 따라 다른 스타일을 적용할 수 있음
- media 속성: screen (화면), print (인쇄), handheld (휴대기기), all 등

예시:
<link rel="stylesheet" href="content.css" media="screen" />

또는

<style>
@media screen {
  #wrap .content { background-color: darkgreen; color: white; }
}
@media print {
  #wrap .content { color: black; }
}
</style>

4. 반응형 웹 (Responsive Web)

- 다양한 디바이스(PC, 태블릿, 스마트폰)에 따라 화면 구조를 바꿔주는 기술
- 뷰포트 설정 필수:
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

- device-width에 따라 CSS를 분기 처리

예시:
@media screen and (max-device-width: 959px) {
  #wrap { width: 100%; background-color: lightyellow; }
  #wrap #nav ul li:last-child { display: none; }
  #wrap #nav ul li { width: 25%; }
}

@media screen and (min-device-width: 960px) and (max-device-width: 1201px) {
  #wrap { background-color: aqua; opacity: 0.8; }
  #wrap #nav ul li { width: 20%; }
}

@media screen and (min-device-width: 1201px) {
  #wrap { width: 800px; }
  #wrap #content { background-color: coral; }
}

5. 레이아웃 구성 구조

- #wrap: 전체 컨테이너
- #header: 상단 제목 영역
- #nav: 메뉴 (ul > li > a)
- #content: 본문 영역
- #footer: 하단 영역

공통 스타일 요소:
- float, box-sizing: border-box, text-align, line-height 등

